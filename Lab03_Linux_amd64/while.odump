
while.o:     file format elf64-x86-64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000049  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  0000000000000000  0000000000000000  00000089  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  0000000000000000  0000000000000000  00000089  2**0
                  ALLOC
  3 .debug_info   000000ba  0000000000000000  0000000000000000  00000089  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
  4 .debug_abbrev 00000068  0000000000000000  0000000000000000  00000143  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_aranges 00000030  0000000000000000  0000000000000000  000001ab  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
  6 .debug_line   0000006d  0000000000000000  0000000000000000  000001db  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING, OCTETS
  7 .debug_str    00000090  0000000000000000  0000000000000000  00000248  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line_str 000000b4  0000000000000000  0000000000000000  000002d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .comment      00000020  0000000000000000  0000000000000000  0000038c  2**0
                  CONTENTS, READONLY
 10 .note.GNU-stack 00000000  0000000000000000  0000000000000000  000003ac  2**0
                  CONTENTS, READONLY
 11 .eh_frame     00000098  0000000000000000  0000000000000000  000003b0  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 while.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .debug_line_str	0000000000000000 .debug_line_str
0000000000000000 g     F .text	0000000000000007 before_while
0000000000000007 g     F .text	0000000000000007 inside_while
000000000000000e g     F .text	0000000000000007 after_while
0000000000000015 g     F .text	0000000000000034 demo_while


Contents of section .text:
 0000 554889e5 905dc355 4889e590 5dc35548  UH...].UH...].UH
 0010 89e5905d c3554889 e54883ec 10897dfc  ...].UH..H....}.
 0020 b8000000 00e80000 0000eb0a b8000000  ................
 0030 00e80000 0000837d fc0075f0 b8000000  .......}..u.....
 0040 00e80000 000090c9 c3                 .........       
Contents of section .debug_info:
 0000 b6000000 05000108 00000000 02000000  ................
 0010 000c0000 00000000 00000000 00000000  ................
 0020 00004900 00000000 00000000 00000300  ..I.............
 0030 00000001 05055e00 00000000 00000000  ......^.........
 0040 00003400 00000000 0000019c 5e000000  ..4.........^...
 0050 04630001 05145e00 00000291 6c000504  .c....^.....l...
 0060 05696e74 00010000 0000035e 00000000  .int.......^....
 0070 00000000 00000007 00000000 00000001  ................
 0080 9c010000 0000025e 00000000 00000000  .......^........
 0090 00000007 00000000 00000001 9c010000  ................
 00a0 0000015e 00000000 00000000 00000007  ...^............
 00b0 00000000 00000001 9c00               ..........      
Contents of section .debug_abbrev:
 0000 012e003f 19030e3a 21013b0b 39210549  ...?...:!.;.9!.I
 0010 13110112 0740187a 19000002 1101250e  .....@.z......%.
 0020 130b031f 1b1f1101 12071017 0000032e  ................
 0030 013f1903 0e3a0b3b 0b390b27 19491311  .?...:.;.9.'.I..
 0040 01120740 187c1901 13000004 05000308  ...@.|..........
 0050 3a0b3b0b 390b4913 02180000 0524000b  :.;.9.I......$..
 0060 0b3e0b03 08000000                    .>......        
Contents of section .debug_aranges:
 0000 2c000000 02000000 00000800 00000000  ,...............
 0010 00000000 00000000 49000000 00000000  ........I.......
 0020 00000000 00000000 00000000 00000000  ................
Contents of section .debug_line:
 0000 69000000 05000800 2a000000 010101fb  i.......*.......
 0010 0e0d0001 01010100 00000100 00010101  ................
 0020 1f010000 00000201 1f020f02 00000000  ................
 0030 00000000 00000514 00090200 00000000  ................
 0040 00000001 05154a05 143d0515 4a05133d  ......J..=..J..=
 0050 05144a05 173e0503 ad05099f 05052f05  ..J..>......../.
 0060 0c9d0503 6905019f 02030001 01        ....i........   
Contents of section .debug_str:
 0000 64656d6f 5f776869 6c650047 4e552043  demo_while.GNU C
 0010 39392031 342e322e 30202d6d 74756e65  99 14.2.0 -mtune
 0020 3d67656e 65726963 202d6d61 7263683d  =generic -march=
 0030 7838362d 3634202d 67202d4f 30202d73  x86-64 -g -O0 -s
 0040 74643d63 3939202d 66504943 202d6661  td=c99 -fPIC -fa
 0050 73796e63 68726f6e 6f75732d 756e7769  synchronous-unwi
 0060 6e642d74 61626c65 7300696e 73696465  nd-tables.inside
 0070 5f776869 6c650061 66746572 5f776869  _while.after_whi
 0080 6c650062 65666f72 655f7768 696c6500  le.before_while.
Contents of section .debug_line_str:
 0000 7768696c 652e6300 2f686f6d 652f6b61  while.c./home/ka
 0010 6c692f44 65736b74 6f702f73 6f667477  li/Desktop/softw
 0020 6172655f 72657665 7273652d 456e672f  are_reverse-Eng/
 0030 72657665 7273652d 656e6769 6e656572  reverse-engineer
 0040 696e672f 4c616230 335f4c69 6e75785f  ing/Lab03_Linux_
 0050 616d6436 34002f68 6f6d652f 6b616c69  amd64./home/kali
 0060 2f446573 6b746f70 2f736f66 74776172  /Desktop/softwar
 0070 655f7265 76657273 652d456e 672f7265  e_reverse-Eng/re
 0080 76657273 652d656e 67696e65 6572696e  verse-engineerin
 0090 672f4c61 6230335f 4c696e75 785f616d  g/Lab03_Linux_am
 00a0 64363400 7768696c 652e6300 7768696c  d64.while.c.whil
 00b0 652e6300                             e.c.            
Contents of section .comment:
 0000 00474343 3a202844 65626961 6e203134  .GCC: (Debian 14
 0010 2e322e30 2d313929 2031342e 322e3000  .2.0-19) 14.2.0.
Contents of section .eh_frame:
 0000 14000000 00000000 017a5200 01781001  .........zR..x..
 0010 1b0c0708 90010000 1c000000 1c000000  ................
 0020 00000000 07000000 00410e10 8602430d  .........A....C.
 0030 06420c07 08000000 1c000000 3c000000  .B..........<...
 0040 00000000 07000000 00410e10 8602430d  .........A....C.
 0050 06420c07 08000000 1c000000 5c000000  .B..........\...
 0060 00000000 07000000 00410e10 8602430d  .........A....C.
 0070 06420c07 08000000 1c000000 7c000000  .B..........|...
 0080 00000000 34000000 00410e10 8602430d  ....4....A....C.
 0090 066f0c07 08000000                    .o......        

Disassembly of section .text:

0000000000000000 <before_while>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	90                   	nop
   5:	5d                   	pop    rbp
   6:	c3                   	ret

0000000000000007 <inside_while>:
   7:	55                   	push   rbp
   8:	48 89 e5             	mov    rbp,rsp
   b:	90                   	nop
   c:	5d                   	pop    rbp
   d:	c3                   	ret

000000000000000e <after_while>:
   e:	55                   	push   rbp
   f:	48 89 e5             	mov    rbp,rsp
  12:	90                   	nop
  13:	5d                   	pop    rbp
  14:	c3                   	ret

0000000000000015 <demo_while>:
  15:	55                   	push   rbp
  16:	48 89 e5             	mov    rbp,rsp
  19:	48 83 ec 10          	sub    rsp,0x10
  1d:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  20:	b8 00 00 00 00       	mov    eax,0x0
  25:	e8 00 00 00 00       	call   2a <demo_while+0x15>
			26: R_X86_64_PLT32	before_while-0x4
  2a:	eb 0a                	jmp    36 <demo_while+0x21>
  2c:	b8 00 00 00 00       	mov    eax,0x0
  31:	e8 00 00 00 00       	call   36 <demo_while+0x21>
			32: R_X86_64_PLT32	inside_while-0x4
  36:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
  3a:	75 f0                	jne    2c <demo_while+0x17>
  3c:	b8 00 00 00 00       	mov    eax,0x0
  41:	e8 00 00 00 00       	call   46 <demo_while+0x31>
			42: R_X86_64_PLT32	after_while-0x4
  46:	90                   	nop
  47:	c9                   	leave
  48:	c3                   	ret
